server.port=9008
spring.application.name=finnet-svc

info.app.name=finnet-svc
ip.address=localhost

info.app.version=1.0
#debug=false

spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.testWhileIdle = true
spring.datasource.timeBetweenEvictionRunsMillis = 3600000
spring.datasource.validationQuery = SELECT 1

#postgres-docker
spring.datasource.username=postgres
spring.datasource.password=docker
spring.datasource.url=jdbc:postgresql://127.0.0.1:5432/finnet-svc
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto=validate
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

#redis-docker
spring.redis.ip=127.0.0.1
spring.redis.password=docker
spring.redis.port=6379

logging.path=file:./log/
logging.file=log/spring.log

eureka.client.serviceUrl.defaultZone=http://${EUREKA_HOST:127.0.0.1}:${EUREKA_PORT:8761}/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
eureka.instance.hostname=${EUREKA_HOSTNAME:finnet-svc}
eureka.instance.prefer-ip-address=true

finnet.address = http://localhost:9006
finnet.uri = /mock-server-finnet

finnet.ss.destinationAccount = 100100101
finnet.ss.feeAccount = 100100102

finnet.telkom.productCode = 100001
finnet.telkom.fee = 1500

finnet.productCode.telkomsel-prepaid = 100002
finnet.fee.telkomsel-prepaid = 1500

elastic.apm.enabled=true
elastic.apm.server-url=http://127.0.0.1:8200
elastic.apm.service-name=${spring.application.name}
elastic.apm.environment=development
elastic.apm.application-packages=co.id.middleware.finnet.config
elastic.apm.log-level=INFO

#SELECT date,
#message_data -> 'service' as service,
#message_data -> 'message_direction' as message_direction,
#message_data -> 'retrieval_number' as retrieval_number,
#message_data -> 'message_data' -> 'payload' as payload
#FROM finnet_svc;